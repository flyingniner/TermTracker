Index: app/src/main/res/layout/activity_course_add_edit.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n    xmlns:tools=\"http://schemas.android.com/tools\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    tools:context=\".CourseAddEditActivity\">\n\n    <RelativeLayout\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\">\n\n        <TextView\n            android:id=\"@+id/course_add_edit_title_label\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"wrap_content\"\n            android:text=\"@string/course_title_label\"/>\n        <EditText\n            android:id=\"@+id/course_add_edit_title\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"wrap_content\"\n            android:layout_below=\"@id/course_add_edit_title_label\"\n            android:hint=\"Math 101\"/>\n\n        <!--<TextView-->\n            <!--android:id=\"@+id/course_add_edit_code_label\"-->\n            <!--android:layout_width=\"match_parent\"-->\n            <!--android:layout_height=\"wrap_content\"-->\n            <!--android:text=\"@string/course_code_label\"-->\n            <!--android:layout_below=\"@id/course_add_edit_title\"/>-->\n        <!--<EditText-->\n            <!--android:id=\"@+id/course_add_edit_code\"-->\n            <!--android:layout_width=\"match_parent\"-->\n            <!--android:layout_height=\"wrap_content\"-->\n            <!--android:hint=\"MTH101\"-->\n            <!--android:layout_below=\"@id/course_add_edit_code_label\"/>-->\n\n        <TextView\n        android:id=\"@+id/course_add_edit_start_label\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        android:text=\"Start\"\n        android:layout_below=\"@id/course_add_edit_title\"/>\n        <EditText\n            android:id=\"@+id/course_add_edit_start\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"wrap_content\"\n            android:hint=\"01/01/2018\"\n            android:layout_below=\"@id/course_add_edit_start_label\"/>\n\n        <ImageButton\n            android:id=\"@+id/course_add_edit_start_date_picker\"\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"wrap_content\"\n            android:src=\"@drawable/ic_event_black_24dp\"\n            android:layout_alignTop=\"@id/course_add_edit_start_label\"\n            android:layout_alignParentEnd=\"true\"\n            android:layout_marginRight=\"16dp\"\n            android:maxHeight=\"24dp\"/>\n\n        <TextView\n            android:id=\"@+id/course_add_edit_end_label\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"wrap_content\"\n            android:text=\"End\"\n            android:layout_below=\"@id/course_add_edit_start\"/>\n        <EditText\n            android:id=\"@+id/course_add_edit_end\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"wrap_content\"\n            android:hint=\"02/15/2018\"\n            android:layout_below=\"@id/course_add_edit_end_label\"/>\n\n        <ImageButton\n            android:id=\"@+id/course_add_edit_end_date_picker\"\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"wrap_content\"\n            android:src=\"@drawable/ic_event_black_24dp\"\n            android:layout_alignTop=\"@id/course_add_edit_end_label\"\n            android:layout_alignParentEnd=\"true\"\n            android:layout_marginRight=\"16dp\"\n            android:maxHeight=\"24dp\"/>\n\n        <EditText\n            android:id=\"@+id/course_add_edit_status\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"wrap_content\"\n            android:layout_below=\"@id/course_add_edit_end\"\n            android:hint=\"status\"/>\n\n        <Button\n            android:id=\"@+id/course_add_edit_mentor\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"wrap_content\"\n            android:layout_below=\"@id/course_add_edit_status\"\n            android:text=\"Contact Course Mentor\"/>\n\n        <EditText\n            android:id=\"@+id/course_add_edit_term\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"wrap_content\"\n            android:layout_below=\"@id/course_add_edit_mentor\"\n            android:hint=\"term id\"/>\n\n        <androidx.recyclerview.widget.RecyclerView\n            android:id=\"@+id/course_add_edit_recycler_view\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"match_parent\"\n            android:layout_below=\"@id/course_add_edit_term\"\n            android:layout_above=\"@id/course_add_edit_button_group\"\n            tools:listitem=\"@layout/course_item\"/><!--TODO: placeholder image, replace with assessment cardview-->\n\n        <LinearLayout\n            android:id=\"@+id/course_add_edit_button_group\"\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"wrap_content\"\n            android:layout_alignParentBottom=\"true\"\n            android:layout_centerHorizontal=\"true\"\n            android:orientation=\"horizontal\">\n\n            <Button\n                android:id=\"@+id/course_add_edit_save\"\n                android:layout_width=\"wrap_content\"\n                android:layout_height=\"wrap_content\"\n                android:layout_centerHorizontal=\"true\"\n\n                android:paddingHorizontal=\"16dp\"\n                android:text=\"Save\" />\n\n            <Button\n                android:id=\"@+id/course_add_edit_add_assessement\"\n                android:layout_width=\"wrap_content\"\n                android:layout_height=\"wrap_content\"\n                android:layout_alignParentBottom=\"true\"\n                android:layout_centerHorizontal=\"true\"\n                android:paddingHorizontal=\"16dp\"\n                android:text=\"Add Assessment\" />\n\n            <Button\n                android:id=\"@+id/course_add_edit_notes\"\n                android:layout_width=\"wrap_content\"\n                android:layout_height=\"wrap_content\"\n                android:layout_alignParentBottom=\"true\"\n                android:layout_centerHorizontal=\"true\"\n                android:paddingHorizontal=\"16dp\"\n                android:text=\"Notes\" />\n\n        </LinearLayout>\n    </RelativeLayout>\n</LinearLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/activity_course_add_edit.xml	(date 1544409805000)
+++ app/src/main/res/layout/activity_course_add_edit.xml	(date 1544413939000)
@@ -81,32 +81,32 @@
             android:layout_marginRight="16dp"
             android:maxHeight="24dp"/>
 
-        <EditText
-            android:id="@+id/course_add_edit_status"
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content"
-            android:layout_below="@id/course_add_edit_end"
-            android:hint="status"/>
+        <!--<EditText-->
+            <!--android:id="@+id/course_add_edit_status"-->
+            <!--android:layout_width="match_parent"-->
+            <!--android:layout_height="wrap_content"-->
+            <!--android:layout_below="@id/course_add_edit_end"-->
+            <!--android:hint="status"/>-->
 
         <Button
             android:id="@+id/course_add_edit_mentor"
             android:layout_width="match_parent"
             android:layout_height="wrap_content"
-            android:layout_below="@id/course_add_edit_status"
+            android:layout_below="@id/course_add_edit_end"
             android:text="Contact Course Mentor"/>
 
-        <EditText
-            android:id="@+id/course_add_edit_term"
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content"
-            android:layout_below="@id/course_add_edit_mentor"
-            android:hint="term id"/>
+        <!--<EditText-->
+            <!--android:id="@+id/course_add_edit_term"-->
+            <!--android:layout_width="match_parent"-->
+            <!--android:layout_height="wrap_content"-->
+            <!--android:layout_below="@id/course_add_edit_mentor"-->
+            <!--android:hint="term id"/>-->
 
         <androidx.recyclerview.widget.RecyclerView
             android:id="@+id/course_add_edit_recycler_view"
             android:layout_width="match_parent"
             android:layout_height="match_parent"
-            android:layout_below="@id/course_add_edit_term"
+            android:layout_below="@id/course_add_edit_mentor"
             android:layout_above="@id/course_add_edit_button_group"
             tools:listitem="@layout/course_item"/><!--TODO: placeholder image, replace with assessment cardview-->
 
@@ -134,7 +134,7 @@
                 android:layout_alignParentBottom="true"
                 android:layout_centerHorizontal="true"
                 android:paddingHorizontal="16dp"
-                android:text="Add Assessment" />
+                android:text="Assessments" />
 
             <Button
                 android:id="@+id/course_add_edit_notes"
Index: app/src/main/java/com/termtacker/CourseAddEditActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.termtacker;\n\nimport androidx.annotation.Nullable;\nimport androidx.appcompat.app.AppCompatActivity;\n\nimport android.app.DatePickerDialog;\nimport android.content.Context;\nimport android.content.Intent;\nimport android.icu.util.Calendar;\nimport android.os.Bundle;\nimport android.view.Gravity;\nimport android.view.LayoutInflater;\nimport android.view.Menu;\nimport android.view.MenuInflater;\nimport android.view.MenuItem;\nimport android.view.MotionEvent;\nimport android.view.View;\nimport android.widget.Button;\nimport android.widget.DatePicker;\nimport android.widget.EditText;\nimport android.widget.ImageView;\nimport android.widget.LinearLayout;\nimport android.widget.PopupWindow;\nimport android.widget.TextView;\nimport android.widget.Toast;\n\nimport java.time.LocalDate;\n\npublic class CourseAddEditActivity extends AppCompatActivity\n{\n    private static final String TAG = TermAddEditActivity.class.getCanonicalName();\n    public static final int SELECT_MENTOR_REQUEST = 7;\n\n    //region Layout items\n    private EditText editTextCourseTitle;\n    private EditText editTextCourseStart;\n    private TextView textViewCourseEndLabel;\n    private EditText editTextCourseEnd;\n    private ImageView startDatePicker;\n    private ImageView endDatePicker;\n    private EditText editTextCourseStatus;\n    private EditText editTextCourseTermId;\n    private Button contactCourseMentor;\n    private Button saveButton;\n    private Button addAssessmentsButton;\n    private Button addNoteButton;\n    //endregion\n\n    private Course course;\n    private Calendar calendar;\n    private DatePickerDialog datePickerDialog;\n    private CourseViewModel courseViewModel;\n//    private LocalDate startDate;\n//    private LocalDate endDate;\n\n    private boolean isExistingCourse = false;\n    private int courseId = -1; //indicates a new id will need to be set\n    private int mentorId = -1;\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState)\n    {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_course_add_edit);\n\n        //get references to form elements\n        editTextCourseTitle = findViewById(R.id.course_add_edit_title);\n        editTextCourseStart = findViewById(R.id.course_add_edit_start);\n        textViewCourseEndLabel = findViewById(R.id.course_add_edit_end_label);\n        editTextCourseEnd = findViewById(R.id.course_add_edit_end);\n        startDatePicker = findViewById(R.id.course_add_edit_start_date_picker);\n        endDatePicker = findViewById(R.id.course_add_edit_end_date_picker);\n        editTextCourseStatus = findViewById(R.id.course_add_edit_status);\n        editTextCourseTermId = findViewById(R.id.course_add_edit_term);\n        contactCourseMentor = findViewById(R.id.course_add_edit_mentor);\n\n        saveButton = findViewById(R.id.course_add_edit_save);\n        addAssessmentsButton = findViewById(R.id.course_add_edit_add_assessement);\n        addNoteButton = findViewById(R.id.course_add_edit_notes);\n\n\n\n        Intent intent = getIntent();\n        if (intent.hasExtra(CoursesActivity.EXTRA_ID))\n        {\n            setTitle(\"Edit Course\");\n            isExistingCourse = true;\n            courseId = intent.getIntExtra(CoursesActivity.EXTRA_ID, 0);\n            mentorId = intent.getIntExtra(CoursesActivity.EXTRA_MENTORID, 0);\n            String status = intent.getStringExtra(CoursesActivity.EXTRA_STATUS);\n\n            editTextCourseTitle.setText(intent.getStringExtra(CoursesActivity.EXTRA_TITLE));\n            editTextCourseStart.setText(intent.getStringExtra(CoursesActivity.EXTRA_START));\n            editTextCourseEnd.setText(intent.getStringExtra(CoursesActivity.EXTRA_END));\n            editTextCourseStatus.setText(status);\n            editTextCourseTermId.setText(String.valueOf(intent.getIntExtra(CoursesActivity.EXTRA_TERMID, 0)));\n            contactCourseMentor.setText(\"Contact Course Mentor\");\n\n            if (status == null)\n                textViewCourseEndLabel.setText(\"Goal\");\n            else\n                textViewCourseEndLabel.setText(\"Completed\");\n        }\n        else\n        {\n            setTitle(\"Add Course\");\n            contactCourseMentor.setText(\"Select a Mentor\");\n        }\n\n        getSupportActionBar().setDisplayHomeAsUpEnabled(true);\n        getSupportActionBar().setHomeAsUpIndicator(R.drawable.ic_cancel_black_24dp);\n\n        /**\n         * This section here is for displaying the sublist of assessments associated with the\n         * course.\n         * At course creation, no assessments will be present.\n         RecyclerView recyclerView = findViewById(R.id.course_add_edit_recycler_view); //this\n         displays assessments\n         recyclerView.setLayoutManager(new LinearLayoutManager(this));\n         recyclerView.setHasFixedSize(true);\n\n         //TODO: uncomment after assessment adpater is created\n         //        final AssessementAdapter assessementAdapter = new CourseAdapter();\n         //        recyclerView.setAdapter(assessementAdapter);\n\n         final CourseAdapter courseAdapter = new CourseAdapter();\n\n         courseViewModel = ViewModelProviders.of(this).get(CourseViewModel.class);\n         courseViewModel.getFilteredCourses(termId).observe(this, courses -> courseAdapter\n         .submitList(courses));\n\n         courseAdapter.setOnItemClickListener(new CourseAdapter.onItemClickListener()\n         {\n         @Override public void onItemClick(Course course)\n         {\n\n         }\n         });\n         */\n\n\n        setButtonListeners();\n\n    }\n\n    private void setButtonListeners()\n    {\n        //region StartDate DatePicker\n        startDatePicker.setOnClickListener(new View.OnClickListener()\n        {\n            @Override\n            public void onClick(View v)\n            {\n                calendar = Calendar.getInstance();\n                int year = calendar.get(Calendar.YEAR);\n                int month = calendar.get(Calendar.MONTH);\n                int day = calendar.get(Calendar.DAY_OF_MONTH);\n\n                datePickerDialog = new DatePickerDialog(\n                        CourseAddEditActivity.this, new DatePickerDialog.OnDateSetListener()\n                {\n                    @Override\n                    public void onDateSet(DatePicker view, int year, int monthOfYear, int dayOfMonth)\n\n                    {\n                        editTextCourseStart.setText(\n                                (monthOfYear + 1) + \"/\" + dayOfMonth + \"/\" + year);\n                    }\n                }, year, month, day);\n\n                datePickerDialog.show();\n            }\n        });\n\n\n\n        //region EndDate DatePicker\n        endDatePicker.setOnClickListener(new View.OnClickListener()\n        {\n            @Override\n            public void onClick(View v)\n            {\n                calendar = Calendar.getInstance();\n                int year = calendar.get(Calendar.YEAR);\n                int month = calendar.get(Calendar.MONTH);\n                int day = calendar.get(Calendar.DAY_OF_MONTH);\n\n                datePickerDialog = new DatePickerDialog(\n                        CourseAddEditActivity.this, new DatePickerDialog.OnDateSetListener()\n                {\n                    @Override\n                    public void onDateSet(DatePicker view, int year, int monthOfYear, int dayOfMonth)\n                    {\n                        editTextCourseEnd.setText(\n                                (monthOfYear + 1) + \"/\" + dayOfMonth + \"/\" + year);\n                    }\n                }, year, month, day);\n                datePickerDialog.show();\n            }\n        });\n\n        saveButton.setOnClickListener(listener ->\n                                      {\n                                          saveCourse();\n                                      });\n\n        addAssessmentsButton.setOnClickListener(listener ->\n                                                {\n//\n////            Intent intent = new Intent(this, AssessmentActivity.class);\n////            intent.putExtra(EXTRA_CURRENT_TERM_ID,\n////                            getIntent().getIntExtra\n////                                    (TermActivity.EXTRA_ID,\n////                                                                           -1\n//            ));\n\n                                                    //TODO: save the course and then launch the assessments activity. Not usre if I can\n                                                    // use my already created \"saveTerm()\" because that sends a request item back to\n                                                    // the calling activity, so probably need to\n                                                    // overload or call Term\n\n                                                    //basically, will need to query the db to see\n                                                    // if this term exists, and if so, then\n                                                    // peform an update. Else, insert. eitherway, I'll need to capture the ID from\n                                                    // teh insert/update statement to pass along as an intent to the next screen.\n\n                                                    //alternatively, i could save the term, then update the buttons dynamially: Save\n                                                    // becomes \"close\", which just returns to teh\n                                                    // prior screen, but the add courses still\n                                                    // will be available? not sure yet.\n                                                });\n\n\n        contactCourseMentor.setOnClickListener(listener -> {\n\n            if(contactCourseMentor.getText().toString().equals(\"Select a Mentor\"))\n                onButtonSelectAMentorClick();\n            else\n                onButtonViewMentorContactClick(new View(this));\n        });\n    }\n\n\n    private void saveCourse()\n    {\n        String title = editTextCourseTitle.getText().toString().trim();\n        if (title.isEmpty())\n        {\n            Toast.makeText(this, \"A title is required\", Toast.LENGTH_LONG).show();\n            return;\n        }\n\n        String startStr = editTextCourseStart.getText().toString();\n        if (startStr.isEmpty())\n        {\n            Toast.makeText(this, \"A start date is required\", Toast.LENGTH_LONG).show();\n            return;\n        }\n        String[] s = startStr.split(\"/\");\n        LocalDate start = LocalDate.of(Integer.parseInt(s[2]), Integer.parseInt(s[0]), Integer\n                .parseInt(s[1]));\n\n\n        String endStr = editTextCourseEnd.getText().toString();\n        if (endStr.isEmpty())\n        {\n            Toast.makeText(this, \"An end date is required\", Toast.LENGTH_LONG).show();\n            return;\n        }\n        String[] e = endStr.split(\"/\");\n        LocalDate end = LocalDate.of(Integer.parseInt(e[2]), Integer.parseInt(e[0]), Integer\n                .parseInt(e[1]));\n\n        if (start.isAfter(end))\n        {\n            Toast.makeText(this, \"Term Start must come before End\", Toast.LENGTH_LONG).show();\n            return;\n        }\n\n        int termId = Integer.parseInt(editTextCourseTermId.getText().toString());\n\n\n        String status = editTextCourseStatus.getText().toString();\n\n\n        Intent data = new Intent();\n\n        data.putExtra(CoursesActivity.EXTRA_ID, courseId);\n        data.putExtra(CoursesActivity.EXTRA_TITLE, title);\n        data.putExtra(CoursesActivity.EXTRA_START, start.toEpochDay());\n        data.putExtra(CoursesActivity.EXTRA_END, end.toEpochDay());\n        data.putExtra(CoursesActivity.EXTRA_STATUS, status);\n        data.putExtra(CoursesActivity.EXTRA_TERMID, termId);\n        data.putExtra(CoursesActivity.EXTRA_MENTORID, mentorId);\n\n\n        setResult(RESULT_OK, data);\n        finish();\n    }\n\n    private void onButtonViewMentorContactClick(View view)\n    {\n\n        {\n        LayoutInflater inflater = (LayoutInflater) CourseAddEditActivity.this.getSystemService(\n                LAYOUT_INFLATER_SERVICE);\n\n        View popupView = inflater.inflate(R.layout.layout_contact_mentor,null);\n\n\n        int width = LinearLayout.LayoutParams.WRAP_CONTENT;\n        int height = LinearLayout.LayoutParams.WRAP_CONTENT;\n        boolean focusable = true;\n        final PopupWindow popupWindow = new PopupWindow(\n                popupView, width, height, focusable\n        );\n\n        TextView mentorName = popupView.findViewById(R.id.text_view_mentor_name);\n        TextView mentorPhone = popupView.findViewById(R.id.text_view_mentor_phone);\n        TextView mentorEmail = popupView.findViewById(R.id.text_view_mentor_email);\n\n\n        MentorRepository repository = new MentorRepository(getApplication(), courseId);\n        Mentor mentor = repository.getMentor();\n\n        mentorName.setText(mentor.getName());\n        mentorPhone.setText(Utils.formatPhoneNumber(mentor.getPhoneNumber()));\n        mentorEmail.setText(mentor.getEmail());\n\n        popupWindow.showAtLocation(view, Gravity.CENTER, 0, 0);\n\n        popupView.setOnTouchListener(\n                new View.OnTouchListener()\n                {\n                    @Override\n                    public boolean onTouch(View v, MotionEvent event)\n                    {\n                        popupWindow.dismiss();\n                        return true;\n                    }\n                });\n        }\n    }\n\n    private void onButtonSelectAMentorClick()\n    {\n\n        Intent intent = new Intent(this, SelectMentorActivity.class);\n        startActivityForResult(intent, SELECT_MENTOR_REQUEST);\n    }\n\n    @Override\n    protected void onActivityResult(int requestCode, int resultCode, @Nullable Intent data)\n    {\n        super.onActivityResult(requestCode, resultCode, data);\n\n        if (resultCode == RESULT_OK && requestCode == SELECT_MENTOR_REQUEST)\n        {\n            this.mentorId = data.getIntExtra(SelectMentorActivity.EXTRA_MENTOR_ID, 0);\n        }\n    }\n\n    /**\n     * Creates the menu in the activity bar\n     *\n     * @param menu\n     * @return\n     */\n    @Override\n    public boolean onCreateOptionsMenu(Menu menu)\n    {\n        MenuInflater menuInflater = getMenuInflater();\n        menuInflater.inflate(R.menu.term_menu, menu);\n        return true;\n    }\n\n    /**\n     * Handler for when the menu item is selected\n     *\n     * @param item\n     * @return\n     */\n    @Override\n    public boolean onOptionsItemSelected(MenuItem item)\n    {\n\n        Intent intent;\n        switch (item.getItemId())\n        {\n            case R.id.go_to_assessments:\n//                intent = new Intent(this, AssessmentsActivity.class);\n//                startActivityForResult(intent,0);\n//          saveCourse();\n                return true;\n            case R.id.go_to_mentors:\n//                intent = new Intent(this, MentorActivity.class);\n//                startActivityForResult(intent, 0)\n                return true;\n            case R.id.go_to_home:\n                intent = new Intent(this, MainActivity.class);\n                startActivityForResult(intent, 0);\n                return true;\n            case R.id.go_to_terms:\n                intent = new Intent(this, TermActivity.class);\n                startActivityForResult(intent, 0);\n                return true;\n            default:\n                return super.onOptionsItemSelected(item);\n        }\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/termtacker/CourseAddEditActivity.java	(date 1544409805000)
+++ app/src/main/java/com/termtacker/CourseAddEditActivity.java	(date 1544414314000)
@@ -54,8 +54,10 @@
 //    private LocalDate endDate;
 
     private boolean isExistingCourse = false;
-    private int courseId = -1; //indicates a new id will need to be set
-    private int mentorId = -1;
+    private int courseId = 0; //indicates a new id will need to be set
+    private int mentorId = 0;
+    private int termId = 0;
+    String status;
 
     @Override
     protected void onCreate(Bundle savedInstanceState)
@@ -70,8 +72,8 @@
         editTextCourseEnd = findViewById(R.id.course_add_edit_end);
         startDatePicker = findViewById(R.id.course_add_edit_start_date_picker);
         endDatePicker = findViewById(R.id.course_add_edit_end_date_picker);
-        editTextCourseStatus = findViewById(R.id.course_add_edit_status);
-        editTextCourseTermId = findViewById(R.id.course_add_edit_term);
+//        editTextCourseStatus = findViewById(R.id.course_add_edit_status);
+//        editTextCourseTermId = findViewById(R.id.course_add_edit_term);
         contactCourseMentor = findViewById(R.id.course_add_edit_mentor);
 
         saveButton = findViewById(R.id.course_add_edit_save);
@@ -79,7 +81,6 @@
         addNoteButton = findViewById(R.id.course_add_edit_notes);
 
 
-
         Intent intent = getIntent();
         if (intent.hasExtra(CoursesActivity.EXTRA_ID))
         {
@@ -87,16 +88,17 @@
             isExistingCourse = true;
             courseId = intent.getIntExtra(CoursesActivity.EXTRA_ID, 0);
             mentorId = intent.getIntExtra(CoursesActivity.EXTRA_MENTORID, 0);
-            String status = intent.getStringExtra(CoursesActivity.EXTRA_STATUS);
+            status = intent.getStringExtra(CoursesActivity.EXTRA_STATUS);
+            termId = intent.getIntExtra(CoursesActivity.EXTRA_TERMID, 0);
 
             editTextCourseTitle.setText(intent.getStringExtra(CoursesActivity.EXTRA_TITLE));
             editTextCourseStart.setText(intent.getStringExtra(CoursesActivity.EXTRA_START));
             editTextCourseEnd.setText(intent.getStringExtra(CoursesActivity.EXTRA_END));
-            editTextCourseStatus.setText(status);
-            editTextCourseTermId.setText(String.valueOf(intent.getIntExtra(CoursesActivity.EXTRA_TERMID, 0)));
+//            editTextCourseStatus.setText(status);
+//            editTextCourseTermId.setText(String.valueOf(intent.getIntExtra(CoursesActivity.EXTRA_TERMID, 0)));
             contactCourseMentor.setText("Contact Course Mentor");
 
-            if (status == null)
+            if (!status.equals("Completed"))
                 textViewCourseEndLabel.setText("Goal");
             else
                 textViewCourseEndLabel.setText("Completed");
@@ -280,7 +282,8 @@
         int termId = Integer.parseInt(editTextCourseTermId.getText().toString());
 
 
-        String status = editTextCourseStatus.getText().toString();
+//        String status = editTextCourseStatus.getText().toString();
+
 
 
         Intent data = new Intent();
@@ -298,6 +301,7 @@
         finish();
     }
 
+
     private void onButtonViewMentorContactClick(View view)
     {
 
Index: app/src/main/java/com/termtacker/CoursesActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.termtacker;\n\nimport androidx.annotation.NonNull;\nimport androidx.annotation.Nullable;\nimport androidx.appcompat.app.AppCompatActivity;\nimport androidx.lifecycle.ViewModelProviders;\nimport androidx.recyclerview.widget.ItemTouchHelper;\nimport androidx.recyclerview.widget.LinearLayoutManager;\nimport androidx.recyclerview.widget.RecyclerView;\n\nimport android.content.Intent;\nimport android.os.Bundle;\nimport android.util.Log;\nimport android.view.Menu;\nimport android.view.MenuInflater;\nimport android.view.MenuItem;\nimport android.widget.Button;\nimport android.widget.Toast;\n\nimport com.google.android.material.floatingactionbutton.FloatingActionButton;\n\nimport java.time.LocalDate;\n\npublic class CoursesActivity extends AppCompatActivity\n{\n    public static final String TAG = CoursesActivity.class.getCanonicalName();\n    private CourseViewModel courseViewModel;\n    public static final int ADD_COURSE_REQUEST = 5;\n    public static final int EDIT_COURSE_REQUEST = 6;\n\n\n\n    public static final String EXTRA_ID = \"com.termtracker.CoursesActivity.EXTRA_ID\";\n    public static final String EXTRA_TITLE = \"com.termtracker.CoursesActivity.EXTRA_TITLE\";\n    public static final String EXTRA_START = \"com.termtracker.CoursesActivity.EXTRA_START\";\n    public static final String EXTRA_END = \"com.termtracker.CoursesActivity.EXTRA_END\";\n    public static final String EXTRA_STATUS = \"com.termtracker.CoursesActivity.EXTRA_STATUS\";\n    public static final String EXTRA_TERMID = \"com.termtracker.CoursesActivity.EXTRA_TERMID\";\n    public static final String EXTRA_MENTORID = \"com.termtracker.CoursesActivity.EXTRA_MENTORID\";\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState)\n    {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_courses);\n\n        setTitle(\"Courses\");\n\n        FloatingActionButton buttonAddCourse = findViewById(R.id.courses_add_course);\n        buttonAddCourse.setOnClickListener(v -> {\n            Intent intent = new Intent(this, CourseAddEditActivity.class);\n            startActivityForResult(intent, ADD_COURSE_REQUEST);\n        });\n\n        RecyclerView recyclerView = findViewById(R.id.courses_recycler_view);\n        recyclerView.setLayoutManager(new LinearLayoutManager(this));\n        recyclerView.setHasFixedSize(true);\n\n        final CourseAdapter courseAdapter = new CourseAdapter();\n        recyclerView.setAdapter(courseAdapter);\n\n        courseViewModel = ViewModelProviders.of(this).get(CourseViewModel.class);\n        courseViewModel.getAllCourses().observe(this, list -> courseAdapter.submitList(list)\n        );\n\n        courseAdapter.setOnItemClickListener(course -> {\n            Intent intent = new Intent(this, CourseAddEditActivity.class);\n            intent.putExtra(EXTRA_ID, course.getCourseId());\n            intent.putExtra(EXTRA_TITLE, course.getTitle());\n            intent.putExtra(EXTRA_START, course.getStartDate().format(Utils.dateFormatter_MMddyyyy).toString());\n            intent.putExtra(EXTRA_END, course.getEndDate().format(Utils.dateFormatter_MMddyyyy).toString());\n            intent.putExtra(EXTRA_STATUS, course.getStatus());\n            intent.putExtra(EXTRA_TERMID, course.getTermId());\n            intent.putExtra(EXTRA_MENTORID, course.getCourseMentorId());\n            Log.d(TAG,\n            \"CourseID: \" +course.getCourseId() +\"\\r\\nTitle \" +\n                    course.getTitle() + \"\\r\\nStart \" +\n                    course.getStartDate() + \"\\r\\nEnd \" +\n                    course.getEndDate() + \"\\r\\nStatus \" +\n                    course.getStatus() + \"\\r\\nTermID \" +\n                    course.getTermId() + \"\\r\\nMentorId \" +\n                    course.getCourseMentorId()\n            );\n\n\n                startActivityForResult(intent, EDIT_COURSE_REQUEST);\n        });\n\n        new ItemTouchHelper(new ItemTouchHelper.SimpleCallback(0, ItemTouchHelper.LEFT)\n        {\n            @Override\n            public boolean onMove(@NonNull RecyclerView recyclerView, @NonNull RecyclerView\n                    .ViewHolder viewHolder, @NonNull RecyclerView.ViewHolder target)\n            {\n                return false;\n            }\n\n            @Override\n            public void onSwiped(@NonNull RecyclerView.ViewHolder viewHolder, int direction)\n            {\n\n                Course swipedCourse = courseAdapter.getCourseAt(viewHolder.getAdapterPosition());\n\n                if (swipedCourse.getStatus() == Status.PENDING &&\n                        swipedCourse.getTermId() == 0) {\n                    courseViewModel.deleteCourse(swipedCourse);\n                    Toast.makeText(CoursesActivity.this,\n                                   \"Course Deleted!\", Toast.LENGTH_SHORT).show();\n                }\n                else {\n                    Toast.makeText(CoursesActivity.this,\n                                   \"Course can't be deleted because it's associated to a Term\",\n                                   Toast.LENGTH_LONG).show();\n                }\n\n            }\n        });\n    }\n\n    @Override\n    protected void onActivityResult(int requestCode, int resultCode, @Nullable Intent data)\n    {\n        super.onActivityResult(requestCode, resultCode, data);\n\n\n        if (resultCode == RESULT_OK) {\n            Course course;\n\n            String title = data.getStringExtra(EXTRA_TITLE);\n            LocalDate start = LocalDate.ofEpochDay(data.getLongExtra(EXTRA_START, -1));\n            LocalDate end = LocalDate.ofEpochDay(data.getLongExtra(EXTRA_END, -1));\n            String status = data.getStringExtra(EXTRA_STATUS);\n            int termId = data.getIntExtra(EXTRA_TERMID, -1);\n            int mentorId = data.getIntExtra(EXTRA_MENTORID, -1);\n\n            if (requestCode == ADD_COURSE_REQUEST) {\n                course = new Course(title, start, end, status, mentorId, termId);\n                courseViewModel.insertCourse(course);\n                Toast.makeText(CoursesActivity.this,\n                               \"Coursed Added!\", Toast.LENGTH_SHORT).show();\n            }\n            else if (requestCode == EDIT_COURSE_REQUEST) {\n                int courseId = data.getIntExtra(EXTRA_ID, -1);\n                course = new Course(courseId, title, start, end, status, mentorId, termId);\n                courseViewModel.updateCourse(course);\n                Toast.makeText(CoursesActivity.this,\n                               \"Coursed Updated!\", Toast.LENGTH_SHORT).show();\n            }\n\n        }\n        else {\n            Toast.makeText(CoursesActivity.this,\n                           \"Course was not able to be saved!\", Toast.LENGTH_SHORT).show();\n        }\n    }\n\n    @Override\n    public boolean onCreateOptionsMenu(Menu menu)\n    {\n        MenuInflater menuInflater = getMenuInflater();\n        menuInflater.inflate(R.menu.course_menu, menu);\n\n        return true;\n    }\n\n    @Override\n    public boolean onOptionsItemSelected(MenuItem item)\n    {\n        Intent intent;\n        //TODO: figure out how to move between screens from the menu?\n        switch (item.getItemId())\n        {\n            case R.id.go_to_assessments:\n//                intent = new Intent(this, CoursesActivity.class); //TODO: change to AssessmentActivity.class\n//                startActivityForResult(intent,0);\n                return true;\n            case R.id.go_to_mentors:\n//                intent = new Intent(this, CoursesActivity.class); //TODO: change to MentorActivity.class\n//                startActivityForResult(intent,0);\n                return true;\n            case R.id.go_to_terms:\n                intent = new Intent(this, TermActivity.class);\n                startActivityForResult(intent,0);\n                return true;\n            case R.id.go_to_home:\n                intent = new Intent(this, MainActivity.class);\n                startActivityForResult(intent,0);\n                return true;\n\n            default: return super.onOptionsItemSelected(item);\n        }\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/termtacker/CoursesActivity.java	(date 1544409805000)
+++ app/src/main/java/com/termtacker/CoursesActivity.java	(date 1544414591000)
@@ -72,15 +72,15 @@
             intent.putExtra(EXTRA_STATUS, course.getStatus());
             intent.putExtra(EXTRA_TERMID, course.getTermId());
             intent.putExtra(EXTRA_MENTORID, course.getCourseMentorId());
-            Log.d(TAG,
-            "CourseID: " +course.getCourseId() +"\r\nTitle " +
-                    course.getTitle() + "\r\nStart " +
-                    course.getStartDate() + "\r\nEnd " +
-                    course.getEndDate() + "\r\nStatus " +
-                    course.getStatus() + "\r\nTermID " +
-                    course.getTermId() + "\r\nMentorId " +
-                    course.getCourseMentorId()
-            );
+//            Log.d(TAG,
+//            "CourseID: " +course.getCourseId() +"\r\nTitle " +
+//                    course.getTitle() + "\r\nStart " +
+//                    course.getStartDate() + "\r\nEnd " +
+//                    course.getEndDate() + "\r\nStatus " +
+//                    course.getStatus() + "\r\nTermID " +
+//                    course.getTermId() + "\r\nMentorId " +
+//                    course.getCourseMentorId()
+//            );
 
 
                 startActivityForResult(intent, EDIT_COURSE_REQUEST);
